{"version":3,"sources":["helpers/fetchCountries.js","helpers/formatDate.js","redux/countries/countries.js","components/common/Header.js","components/common/Jumbo.js","components/common/Topic.js","components/OneCountry.js","components/Countries.js","helpers/fetchRegions.js","redux/regions/regions.js","components/OneRegion.js","components/Regions.js","redux/configureStore.js","App.js","index.js"],"names":["fetchCountries","date","a","fetch","response","json","cont","resolveCountries","countryKeys","dates","countries","obj","Object","entries","mainArr","num","map","country","value","i","length","id","confirmedCases","today_confirmed","push","formatDate","Date","newArr","toLocaleDateString","split","nextDate","getHours","join","GET_COUNTRIES","initialState","reducer","state","action","type","countriesTotal","Header","props","year","title","className","to","color","name","defaultProps","Jumbo","cases","size","Topic","topic","OneCountry","Countries","dispatch","useDispatch","useEffect","data","useSelector","countriesReducer","useState","countryState","setCountryState","countryName","setCountryName","placeholder","onChange","e","target","finalValue","toUpperCase","slice","newList","filter","includes","fetchRegions","resolveRegions","key","keys","initialRegions","regions","region","Number","isNaN","totalCases","GET_REGIONS","OneRegion","Regions","useParams","payload","regionsReducer","middleware","logger","thunk","combineReducers","store","createStore","applyMiddleware","App","path","component","exact","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"kQAAaA,EAAc,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACLC,MAAM,iDAAD,OAAkDF,IADlD,cACtBG,EADsB,yBAErBA,EAASC,QAFY,2CAAH,sDAKrBC,EAAO,CACX,QACA,QACA,UACA,iBACA,SACA,cACA,UACA,WACA,SACA,SACA,QACA,QACA,QACA,SACA,KACA,WACA,YACA,WAGWC,EAAmB,SAACH,EAAUH,GACzC,IAAMO,EAAcJ,EAASK,MAAMR,GAAMS,UAEnCC,EAAMC,OAAOC,QAAQL,GACrBM,EAAU,GACZC,EAAM,EAcV,OAZAJ,EAAIK,KAAI,YACN,IAD6B,IAAD,mBAApBC,EAAoB,KAAXC,EAAW,KACnBC,EAAI,EAAGA,GAAKb,EAAKc,OAAQD,GAAK,EACrC,GAAIb,EAAKa,KAAOF,EAAS,CACvB,IAAQI,EAAOH,EAAPG,GACFC,EAAiBJ,EAAMK,gBAC7BR,GAAOG,EAAMK,gBACbT,EAAQU,KAAK,CAAEH,KAAIJ,UAASK,mBAGhC,OAAOR,KAGF,CAAEA,UAASC,QC3BLU,EAlBI,WACjB,IAAMxB,EAAO,IAAIyB,KAEXC,EADW1B,EAAK2B,qBACEC,MAAM,KACxBC,EAAW,GAJM,EAKM,CAACH,EAAO,GAAIA,EAAO,IAUhD,OAVCG,EAAS,GALa,KAKTA,EAAS,GALA,KAMnB7B,EAAK8B,WAAa,GAEpBD,EAAS,GAAKH,EAAO,GAAK,EAG1BG,EAAS,GAAK,CAACH,EAAO,IAELG,EAASE,KAAK,MCV7BC,EAAgB,uCAEhBC,EAAe,GA0BNC,EAbC,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAChD,OAAQA,EAAOC,OACRL,EACI,aACLM,eAAgBF,EAAOtB,IACvBL,UAAW2B,EAAO3B,WACf0B,GAGEA,G,eCtBPI,EAAS,SAACC,GACd,IAAQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,sBAAKC,UAAU,oCAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,0BAAUC,MAAM,QAAQR,KAAK,QAAQS,KAAK,mBAE5C,qBAAKH,UAAU,aAAf,SAA6BF,OAE/B,qBAAKE,UAAU,aAAf,SAA6BD,IAC7B,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,OAAf,SACE,0BAAUE,MAAM,QAAQC,KAAK,iBAE/B,8BACE,0BAAUD,MAAM,QAAQC,KAAK,iBAYvCP,EAAOQ,aAAe,CACpBN,KAAM,IAGOF,QCnCTS,EAAQ,SAACR,GACb,IAAQM,EAAgBN,EAAhBM,KAAMG,EAAUT,EAAVS,MAEd,OACE,sBAAKN,UAAU,eAAf,UACE,qBAAKA,UAAU,gBAAf,SACY,cAATG,EACG,0BAAUD,MAAM,UAAUK,KAAK,OAAOJ,KAAK,UAC3C,0BAAUD,MAAM,UAAUK,KAAK,OAAOJ,KAAK,UAEjD,sBAAKH,UAAU,mBAAf,UACE,8BAAMG,IACN,8BAAMG,WAWdD,EAAMD,aAAe,CACnBE,MAAO,GAGMD,QCbAG,EAdD,SAACX,GACb,IAAQY,EAAUZ,EAAVY,MAER,OACE,qBAAKT,UAAU,YAAf,SACE,8BAAMS,OC6BGC,EAjCI,SAACb,GAClB,IACE1B,EAIE0B,EAJF1B,IACAM,EAGEoB,EAHFpB,GACA0B,EAEEN,EAFFM,KACAG,EACET,EADFS,MAGF,OACE,qBAAKN,UAAmB,IAAR7B,GAAqB,IAARA,EAAY,6BAA+B,8BAAxE,SACE,eAAC,IAAD,CAAS8B,GAAE,WAAMxB,GAAjB,UACE,sBAAMuB,UAAU,gBAAhB,SACE,0BAAUE,MAAM,OAAOK,KAAK,OAAOJ,KAAK,yBAE1C,qBAAKH,UAAU,aAAf,SACE,0BAAUE,MAAM,UAAUK,KAAK,OAAOJ,KAAK,UAE7C,sBAAKH,UAAU,oBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BG,IAC/B,qBAAKH,UAAU,oBAAf,SAAoCM,aCkD/BK,EAjEG,WAChB,IAAMC,EAAWC,cAEjBC,qBAAU,WACRF,ELLwB,uCAAM,WAAOA,GAAP,uBAAAtD,EAAA,6DAC1BD,EAAOwB,IADmB,SAEbzB,EAAeC,GAFF,OAE1B0D,EAF0B,SAGPpD,EAAiBoD,EAAM1D,GAAxCa,EAHwB,EAGxBA,QAASC,EAHe,EAGfA,IACjByC,EAAS,CACPlB,KAAML,EACNvB,UAAWI,EACXC,QAP8B,2CAAN,yDKMvB,CAACyC,IAEJ,IAAIzC,EAAM,EACV,EAAsC6C,aAAY,SAACxB,GAAD,OAAWA,EAAMyB,oBAA3DnD,EAAR,EAAQA,UAAW6B,EAAnB,EAAmBA,eACnB,EAAwCuB,mBAASpD,GAAjD,mBAAOqD,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEAR,qBAAU,WACRM,EAAgBtD,KACf,CAACA,IAkBJ,OACE,gCACE,cAAC,EAAD,CAAQgC,KAAK,OAAOC,MAAM,oBAC1B,cAAC,EAAD,CAAOI,KAAK,YAAYG,MAAOX,IAC/B,sBAAKK,UAAU,qBAAf,UACE,cAAC,EAAD,CAAOS,MAAM,qBACb,qBAAKT,UAAU,oBAAf,SACE,uBAAON,KAAK,OAAO6B,YAAY,iBAAiBC,SAvBvC,SAACC,GAChB,IAAQnD,EAAUmD,EAAEC,OAAZpD,MACJqD,EAAa,GACjB,GAAIrD,EAAME,OAAS,EAAG,CACpBmD,EAAa,UAAGrD,EAAM,GAAGsD,eAAZ,UACNtD,EAAMuD,MAAM,EAAGvD,EAAME,SAC5B8C,EAAeK,GACf,IAAMG,EAAUhE,EAAUiE,QAAO,SAAC1D,GAAD,OAAaA,EAAQA,QAAQ2D,SAASL,MACvEP,EAAgBU,QAGhBR,EADAK,EAAa,IAEbP,EAAgBtD,IAWwDQ,MAAO+C,SAG/E,qBAAKrB,UAAU,sBAAf,SACGmB,GAAgBA,EAAa/C,KAAI,SAACC,GAOjC,OANKF,EAAM,EAAK,EACdA,EAAM,EAENA,GAAO,EAIP,cAAC,EAAD,CACEA,IAAKA,EAELM,GAAIJ,EAAQI,GACZ0B,KAAM9B,EAAQA,QACdiC,MAAOjC,EAAQK,gBAHVL,EAAQI,aC7DdwD,EAAY,uCAAG,WAAO5E,EAAMoB,GAAb,eAAAnB,EAAA,sEACHC,MAAM,iDAAD,OAAkDF,EAAlD,oBAAkEoB,IADpE,cACpBjB,EADoB,yBAEnBA,EAASC,QAFU,2CAAH,wDAKZyE,EAAiB,SAAC1E,EAAUH,GACvC,IAAM8E,EAAMnE,OAAOoE,KAAK5E,EAASK,MAAMR,GAAMS,WACvCuE,EAAiB7E,EAASK,MAAMR,GAAMS,UAAUqE,GAAKG,QACvDnE,EAAM,EAQV,MAAO,CAAEmE,QAPOD,EAAejE,KAAI,SAACmE,GAIlC,OAHKC,OAAOC,MAAMF,EAAO5D,mBACvBR,GAAOoE,EAAO5D,iBAET,CAAEF,GAAI8D,EAAO9D,GAAI0B,KAAMoC,EAAOpC,KAAMuC,WAAYH,EAAO5D,oBAG9CwB,KAAMgC,EAAKO,WAAYvE,ICbrCwE,EAAc,qCAEdrD,EAAe,GA6BNC,EAdC,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAChD,OAAQA,EAAOC,OACRiD,EACI,2BACFnD,GADL,IAEE8C,QAAS7C,EAAO6C,QAChBnC,KAAMV,EAAOU,KACbuC,WAAYjD,EAAOiD,aAGdlD,GCLEoD,EAtBG,SAAC/C,GACjB,IAAQM,EAAqBN,EAArBM,KAAMG,EAAeT,EAAfS,MAAOnC,EAAQ0B,EAAR1B,IAErB,OACE,sBAAK6B,UAAW7B,EAAM,IAAM,EAAI,gCAAkC,+BAAlE,UACE,8BAAMgC,IACN,sBAAKH,UAAU,SAAf,UACE,8BAAMM,IACN,qBAAKN,UAAU,YAAf,SACE,0BAAUE,MAAM,OAAOK,KAAK,OAAOJ,KAAK,gCCoCnC0C,EAvCC,WACd,IAAMjC,EAAWC,cACTpC,EAAOqE,cAAPrE,GACJN,EAAM,EAEV2C,qBAAU,WFPc,IAACiC,EEQvBnC,GFRuBmC,EEQHtE,EFRE,uCAAa,WAAOmC,GAAP,yBAAAtD,EAAA,6DAC/BD,EAAOwB,IADwB,SAGlBoD,EAAa5E,EAAM0F,GAHD,OAG/BhC,EAH+B,SAICmB,EAAenB,EAAM1D,GAAnDiF,EAJ6B,EAI7BA,QAASnC,EAJoB,EAIpBA,KAAMuC,EAJc,EAIdA,WACvB9B,EAAS,CACPlB,KAAMiD,EACNL,UACAnC,OACAuC,eATmC,2CAAb,0DESrB,CAAC9B,EAAUnC,IAEd,MAAsCuC,aAAY,SAACxB,GAAD,OAAWA,EAAMwD,kBAA3DV,EAAR,EAAQA,QAASnC,EAAjB,EAAiBA,KAAMuC,EAAvB,EAAuBA,WAEvB,OAAKJ,EAKH,gCACE,cAAC,EAAD,CAAQvC,MAAM,oBACd,cAAC,EAAD,CAAOI,KAAMA,EAAK,GAAIG,MAAOoC,IAC7B,cAAC,EAAD,CAAOjC,MAAM,2BACb,6BACG6B,GAAWA,EAAQlE,KAAI,SAACmE,GAGvB,OAFApE,GAAO,EAGL,6BACE,cAAC,EAAD,CACEA,IAAKA,EACLgC,KAAMoC,EAAOpC,KACbG,MAAOiC,EAAOG,cAJTH,EAAO9D,YAbjB,M,iCCfLwE,EAAa,CAACC,IAAQC,KAEtB5D,EAAU6D,YAAgB,CAC9BnC,mBACA+B,mBAQaK,EALDC,YACZ/D,EACAgE,IAAe,WAAf,EAAmBN,ICKNO,MAXf,WACE,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,IAAIC,UAAW/C,EAAWgD,OAAK,IAC3C,cAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWb,UCTtCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAUC,iBAAlB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.22bea618.chunk.js","sourcesContent":["export const fetchCountries = async (date) => {\n  const response = await fetch(`https://api.covid19tracking.narrativa.com/api/${date}`);\n  return response.json();\n};\n\nconst cont = [\n  'Spain',\n  'Italy',\n  'Germany',\n  'United Kingdom',\n  'France',\n  'Netherlands',\n  'Belgium',\n  'Portugal',\n  'Brazil',\n  'Canada',\n  'Chile',\n  'China',\n  'India',\n  'Mexico',\n  'US',\n  'Colombia',\n  'Australia',\n  'Denmark',\n];\n\nexport const resolveCountries = (response, date) => {\n  const countryKeys = response.dates[date].countries;\n\n  const obj = Object.entries(countryKeys);\n  const mainArr = [];\n  let num = 0;\n\n  obj.map(([country, value]) => {\n    for (let i = 0; i <= cont.length; i += 1) {\n      if (cont[i] === country) {\n        const { id } = value;\n        const confirmedCases = value.today_confirmed;\n        num += value.today_confirmed;\n        mainArr.push({ id, country, confirmedCases });\n      }\n    }\n    return mainArr;\n  });\n\n  return { mainArr, num };\n};\n","const formatDate = () => {\n  const date = new Date();\n  const toLocale = date.toLocaleDateString();\n  const newArr = toLocale.split('/');\n  const nextDate = [];\n  [nextDate[0], nextDate[1]] = [newArr[2], newArr[0]];\n  if (date.getHours() < 14) {\n    // fetch information for previous date\n    nextDate[2] = newArr[1] - 1;\n  } else {\n    // fetch information for current date\n    nextDate[2] = [newArr[1]];\n  }\n  const latestDate = nextDate.join('-');\n\n  return latestDate;\n};\n\nexport default formatDate;\n","import { resolveCountries, fetchCountries } from '../../helpers/fetchCountries';\nimport formatDate from '../../helpers/formatDate';\n\nconst GET_COUNTRIES = 'covidFigures/countries/GET_COUNTRIES';\n\nconst initialState = [];\n\nexport const getCountries = () => async (dispatch) => {\n  const date = formatDate();\n  const data = await fetchCountries(date);\n  const { mainArr, num } = resolveCountries(data, date);\n  dispatch({\n    type: GET_COUNTRIES,\n    countries: mainArr,\n    num,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        countriesTotal: action.num,\n        countries: action.countries,\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'boxicons';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { year, title } = props;\n\n  return (\n    <div className=\"d-flex fixed-top header px-2 py-2\">\n      <div className=\"d-flex\">\n        <Link to=\"/\">\n          <box-icon color=\"white\" type=\"solid\" name=\"chevron-left\" />\n        </Link>\n        <div className=\"text-white\">{year}</div>\n      </div>\n      <div className=\"text-white\">{title}</div>\n      <div className=\"d-flex\">\n        <div className=\"me-4\">\n          <box-icon color=\"white\" name=\"microphone\" />\n        </div>\n        <div>\n          <box-icon color=\"white\" name=\"cog\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  year: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nHeader.defaultProps = {\n  year: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Jumbo = (props) => {\n  const { name, cases } = props;\n\n  return (\n    <div className=\"jumbo d-flex\">\n      <div className=\"icon-div w-50\">\n        {name === 'Countries'\n          ? <box-icon color=\"#7B2C4B\" size=\"8rem\" name=\"world\" />\n          : <box-icon color=\"#7B2C4B\" size=\"8rem\" name=\"map\" />}\n      </div>\n      <div className=\"w-50 jumbo-title\">\n        <div>{name}</div>\n        <div>{cases}</div>\n      </div>\n    </div>\n  );\n};\n\nJumbo.propTypes = {\n  name: PropTypes.string.isRequired,\n  cases: PropTypes.number,\n};\n\nJumbo.defaultProps = {\n  cases: 0,\n};\n\nexport default Jumbo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Topic = (props) => {\n  const { topic } = props;\n\n  return (\n    <div className=\"topic-div\">\n      <div>{topic}</div>\n    </div>\n  );\n};\n\nTopic.propTypes = {\n  topic: PropTypes.string.isRequired,\n};\n\nexport default Topic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst OneCountry = (props) => {\n  const {\n    num,\n    id,\n    name,\n    cases,\n  } = props;\n\n  return (\n    <div className={num === 2 || num === 3 ? 'country-div pb-3 tinted-bg' : 'country-div pb-3 lighter-bg'}>\n      <NavLink to={`/${id}`}>\n        <span className=\"country-arrow\">\n          <box-icon color=\"#fff\" size=\"1rem\" name=\"right-arrow-circle\" />\n        </span>\n        <div className=\"country-bx\">\n          <box-icon color=\"#7B2C4B\" size=\"6rem\" name=\"map\" />\n        </div>\n        <div className=\"country-text me-2\">\n          <div className=\"country-name\">{name}</div>\n          <div className=\"country-sub-cases\">{cases}</div>\n        </div>\n      </NavLink>\n    </div>\n  );\n};\n\nOneCountry.propTypes = {\n  num: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  cases: PropTypes.number.isRequired,\n};\n\nexport default OneCountry;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCountries } from '../redux/countries/countries';\nimport Header from './common/Header';\nimport Jumbo from './common/Jumbo';\nimport Topic from './common/Topic';\nimport OneCountry from './OneCountry';\n\nconst Countries = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch]);\n\n  let num = 0;\n  const { countries, countriesTotal } = useSelector((state) => state.countriesReducer);\n  const [countryState, setCountryState] = useState(countries);\n  const [countryName, setCountryName] = useState('');\n\n  useEffect(() => {\n    setCountryState(countries);\n  }, [countries]);\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    let finalValue = '';\n    if (value.length > 0) {\n      finalValue = `${value[0].toUpperCase()}`\n        + `${value.slice(1, value.length)}`;\n      setCountryName(finalValue);\n      const newList = countries.filter((country) => country.country.includes(finalValue));\n      setCountryState(newList);\n    } else {\n      finalValue = '';\n      setCountryName(finalValue);\n      setCountryState(countries);\n    }\n  };\n\n  return (\n    <div>\n      <Header year=\"2021\" title=\"countries cases\" />\n      <Jumbo name=\"Countries\" cases={countriesTotal} />\n      <div className=\"topic-input d-flex\">\n        <Topic topic=\"CASES BY COUNTRY\" />\n        <div className=\"search-input pe-3\">\n          <input type=\"text\" placeholder=\"Search country\" onChange={onChange} value={countryName} />\n        </div>\n      </div>\n      <div className=\"countries-container\">\n        {countryState && countryState.map((country) => {\n          if ((num + 1) > 4) {\n            num = 1;\n          } else {\n            num += 1;\n          }\n\n          return (\n            <OneCountry\n              num={num}\n              key={country.id}\n              id={country.id}\n              name={country.country}\n              cases={country.confirmedCases}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Countries;\n","export const fetchRegions = async (date, id) => {\n  const response = await fetch(`https://api.covid19tracking.narrativa.com/api/${date}/country/${id}`);\n  return response.json();\n};\n\nexport const resolveRegions = (response, date) => {\n  const key = Object.keys(response.dates[date].countries);\n  const initialRegions = response.dates[date].countries[key].regions;\n  let num = 0;\n  const regions = initialRegions.map((region) => {\n    if (!Number.isNaN(region.today_confirmed)) {\n      num += region.today_confirmed;\n    }\n    return { id: region.id, name: region.name, totalCases: region.today_confirmed };\n  });\n\n  return { regions, name: key, totalCases: num };\n};\n","import { fetchRegions, resolveRegions } from '../../helpers/fetchRegions';\nimport formatDate from '../../helpers/formatDate';\n\nconst GET_REGIONS = 'covidFigures/countries/GET_REGIONS';\n\nconst initialState = [];\n\nexport const getRegions = (payload) => async (dispatch) => {\n  const date = formatDate();\n\n  const data = await fetchRegions(date, payload);\n  const { regions, name, totalCases } = resolveRegions(data, date);\n  dispatch({\n    type: GET_REGIONS,\n    regions,\n    name,\n    totalCases,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_REGIONS:\n      return {\n        ...state,\n        regions: action.regions,\n        name: action.name,\n        totalCases: action.totalCases,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OneRegion = (props) => {\n  const { name, cases, num } = props;\n\n  return (\n    <div className={num % 2 === 0 ? 'one-region d-flex region-even' : 'one-region d-flex region-odd'}>\n      <div>{name}</div>\n      <div className=\"d-flex\">\n        <div>{cases}</div>\n        <div className=\"bx-icon-2\">\n          <box-icon color=\"#fff\" size=\"1rem\" name=\"right-arrow-circle\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOneRegion.propTypes = {\n  name: PropTypes.string.isRequired,\n  cases: PropTypes.number.isRequired,\n  num: PropTypes.number.isRequired,\n};\n\nexport default OneRegion;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getRegions } from '../redux/regions/regions';\nimport Header from './common/Header';\nimport Jumbo from './common/Jumbo';\nimport Topic from './common/Topic';\nimport OneRegion from './OneRegion';\n\nconst Regions = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  let num = 0;\n\n  useEffect(() => {\n    dispatch(getRegions(id));\n  }, [dispatch, id]);\n\n  const { regions, name, totalCases } = useSelector((state) => state.regionsReducer);\n\n  if (!regions) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Header title=\"cases by region\" />\n      <Jumbo name={name[0]} cases={totalCases} />\n      <Topic topic=\"CASES BY REGION - 2021\" />\n      <ul>\n        {regions && regions.map((region) => {\n          num += 1;\n\n          return (\n            <li key={region.id}>\n              <OneRegion\n                num={num}\n                name={region.name}\n                cases={region.totalCases}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Regions;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport countriesReducer from './countries/countries';\nimport regionsReducer from './regions/regions';\n\nconst middleware = [logger, thunk];\n\nconst reducer = combineReducers({\n  countriesReducer,\n  regionsReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\nexport default store;\n","import { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Countries from './components/Countries';\nimport Regions from './components/Regions';\nimport store from './redux/configureStore';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Switch>\n        <Route path=\"/\" component={Countries} exact />\n        <Route path=\"/:id\" component={Regions} />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}